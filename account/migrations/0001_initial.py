# Generated by Django 4.2.7 on 2023-12-25 20:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "username",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Username"
                    ),
                ),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_patron", models.BooleanField(default=False)),
                ("is_author", models.BooleanField(default=False)),
                (
                    "token",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("L", "Library User"),
                            ("P", "Patron"),
                            ("A", "Author"),
                            ("D", "Admin"),
                        ],
                        default="L",
                        max_length=1,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("read", "Can read a book"),
                    ("review", "Can leave reviews"),
                ],
            },
        ),
        migrations.CreateModel(
            name="PatronUser",
            fields=[
                (
                    "patronid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Patron ID",
                    ),
                ),
                ("address", models.CharField(max_length=50, verbose_name="Address")),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, verbose_name="Phone Number"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User Profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "PatronUser",
                "verbose_name_plural": "PatronUsers",
                "permissions": [
                    ("borrow", "Can borrow a book"),
                    ("return", "Can return a book"),
                ],
            },
        ),
        migrations.CreateModel(
            name="AuthorUser",
            fields=[
                (
                    "author_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Author Id",
                    ),
                ),
                ("birthdate", models.DateField(verbose_name="Birth Date")),
                (
                    "nationality",
                    models.CharField(max_length=50, verbose_name="Nationality"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User Profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "AuthorUser",
                "verbose_name_plural": "AuthorUsers",
                "permissions": [
                    ("write", "Can write a book"),
                    ("publish", "Can publish a book"),
                    ("edit", "Can edit an unpublished book"),
                    ("delete", "Can delete an unpublished book"),
                ],
            },
        ),
    ]
